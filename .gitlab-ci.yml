image: ubuntu

variables:
  GO_VERSION: "1.10"
  GO_PATH: "/build/go"
  PROJECT_PATH: "gitlab.com/ChristianAEDev"
  GITLAB_WORK_DIR: "/builds/christian/worky"

# Used to install the needed software in the container
before_script:
  - mkdir -p $GO_PATH/src/$PROJECT_PATH/builds/christian/worky -p
  - cd ..
  - mv worky $GO_PATH/src/$PROJECT_PATH
  - cd $GO_PATH/src/$PROJECT_PATH/worky
  # We don't really need this folder. But GitLab seems to depend on it as a default folder.
  # So after moving worky into the GOPATH we recreate the folder that the build doesn't fail.
  - mkdir -p $GITLAB_WORK_DIR
# Install all tools needed for the build
  - apt update
  - apt install wget -y
  - apt install curl -y
  - apt install make -y
  - apt install build-essential -y
  - apt install git -y
  - apt install zip -y
  - apt install tree -y
# Install Go
  - wget https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz
  - tar -C /usr/local -xzf go$GO_VERSION.linux-amd64.tar.gz
  - export GOPATH=/build/go
  - export PATH=$PATH:/usr/local/go/bin:$GO_PATH/bin
  - go version
  - go env
# Install dep (Go)
  - mkdir -p $GOPATH/bin
  - curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
# Install Nodejs (npm)
  - curl -sL https://deb.nodesource.com/setup_9.x | bash -
  - apt install nodejs -y
  - npm version
# Install yarn
  - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
  - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
  - apt update
  - apt install yarn -y

build:
  script: 
    - make build
    # Move the the GitLab default build folder. Only from there we can get the artifacts
    - cp -r $GO_PATH/src/$PROJECT_PATH/worky/output/* $GITLAB_WORK_DIR
    - tree $GITLAB_WORK_DIR
  artifacts:
    expire_in: 6 months
    paths:
    - $GITLAB_WORK_DIR
